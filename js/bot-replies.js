// bot-replies.js

const BOT_KB = [
  { key: /–ø—Ä–∏–≤/i, reply: '–ü—Ä–∏–≤—ñ—Ç! –Ø–∫ —è –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?' },
  { key: /—á–∞—Å|–≥–æ–¥–∏–Ω/i, reply: () => `–ó–∞—Ä–∞–∑ ${new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}.` },
  { key: /—Ç–µ–º–∞|theme/i, reply: '–ú–æ–∂–µ—à –ø–µ—Ä–µ–º–∫–Ω—É—Ç–∏ —Ç–µ–º—É –∫–Ω–æ–ø–∫–æ—é üåì —É –∑–∞–≥–æ–ª–æ–≤–∫—É.' },
  { key: /help|–¥–æ–≤—ñ–¥–∫–∞|–ø–æ–º/i, reply: '–ü—ñ–¥–∫–∞–∂–∏ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ ‚Äî —Å–ø—Ä–æ–±—É—é –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏. –ù–∞–ø—Ä., ‚Äú—á–∞—Å‚Äù, ‚Äú—Ç–µ–º–∞‚Äù.' },
  { key: /–¥—è–∫—É/i, reply: '–ó–∞–≤–∂–¥–∏ —Ä–∞–¥–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏!' },
  { key: /–ø–æ–∫–∞|–±—É–≤–∞–π|–¥–æ –∑—É—Å—Ç—Ä/i, reply: '–ë—É–≤–∞–π! –ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è ‚òÄÔ∏è' },
];

function generateBotReply(userText) {
  const text = (userText || '').toLowerCase();
  for (const rule of BOT_KB) {
    if (rule.key.test(text)) {
      return typeof rule.reply === 'function' ? rule.reply(userText) : rule.reply;
    }
  }
  // –§–æ–ª–±–µ–∫: –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π –µ—Ö–æ‚Äë—Å—Ç–∏–ª—å –∑ –¥–æ–¥–∞–Ω–æ—é —Ñ—Ä–∞–∑–æ—é
  return `–¢–∏ –Ω–∞–ø–∏—Å–∞–≤: ‚Äú${userText}‚Äù. –ó–≤—É—á–∏—Ç—å —Ü—ñ–∫–∞–≤–æ!`;
}